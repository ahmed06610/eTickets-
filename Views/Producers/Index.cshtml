@using eTickets.Settings
@model IEnumerable<Producer>

@{
    ViewData["Title"] = "List Of Producers";
}

<div class="row">
    <div class="col-md-8 offset-md-2">
        <table class="table">
            <thead>
                <tr>
                    <th>Profile Picture</th>
                    <th>Full Name</th>
                    <th>Bio</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                <tr>
                <td class="align-middle">
                    <img class="rounded-circle" src="@($"{FileSettings.ImagesPath}/Producers/{item.ProfileImage}")"
                         alt="@item.FullName" style="max-width:150px" />
                </td>
                <td class="align-middle">@item.FullName</td>
                <td class="align-middle">@item.Bio</td>
                <td class="align-middle">
                            <a class="btn btn-outline-primary rounded rounded-3 me-2" asp-action="Update" asp-route-id="@item.Id"> <i class="bi bi-pencil-square"></i></a>
                    <a class="btn btn-outline-info rounded rounded-3 me-2" asp-action="Details" asp-route-id="@item.Id">  <i class="bi bi-eye"></i></a>
                            <a class="btn btn-danger rounded rounded-3 js-delete " data-id="@item.Id">
                                <i class="bi bi-trash3"></i>
                            </a>
                </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
</div>


@await Html.PartialAsync("_CreateItem", "Producers")


@section Scripts {
    <script>
        $(document).ready(function () {
            $('.js-delete').on('click', function () {
                var btn = $(this);

                const swal = Swal.mixin({
                    customClass: {
                        confirmButton: 'btn btn-danger mx-2',
                        cancelButton: 'btn btn-light'
                    },
                    buttonsStyling: false
                });

                swal.fire({
                    title: 'Are you sure that you need to delete this Producer?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'No, cancel!',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: `/Producers/Delete/${btn.data('id')}`,
                            method: 'DELETE',
                            success: function () {
                                swal.fire(
                                    'Deleted!',
                                    'Producer has been deleted.',
                                    'success'
                                );

                                btn.parents('tr').fadeOut();
                            },
                            error: function () {
                                swal.fire(
                                    'Oooops...',
                                    'Something went wrong.',
                                    'error'
                                );
                            }
                        });
                    }
                });
            });
        });
    </script>

}